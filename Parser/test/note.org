* test case 1
  #+BEGIN_SRC cpp
    void test() {
        Grammer G {
            { {0, {1, BUTTOM}},     // S -> E-|
              {1, {4, 2}},          // E -> -T
              {1, {2}},             // E -> T
              {1, {1, 4, 2}},       // E -> E - T
              {2, {3}},             // T -> P
              {2, {2, 5, 3}},       // T -> T * P
              {3, {6}},             // P -> a
              {3, {7, 1, 8}} },     // P -> (E)
            { 0, 1, 2, 3 },         // {S, E, T, P}
            { -1, 4, 5, 6, 7, 8 },  // {-|, -, *, a, (, )}
            { },
            10
        };
        String s{
            6, 4, 7, 4, 6, 5, 6, 4, 6, 8, BUTTOM
    //      a  -  (  -  a  *  a  -  a  )  -|
        };
        content = new char*[15];
        for (int i = 0; i < 15; i++) content[i] = new char [3];
        content[0][0] = 'S'; content[0][1] = '\0';
        content[1][0] = 'E'; content[1][1] = '\0';
        content[2][0] = 'T'; content[2][1] = '\0';
        content[3][0] = 'P'; content[3][1] = '\0';
        content[4][0] = '-'; content[4][1] = '\0';
        content[5][0] = '*'; content[5][1] = '\0';
        content[6][0] = 'a'; content[6][1] = '\0';
        content[7][0] = '('; content[7][1] = '\0';
        content[8][0] = ')'; content[8][1] = '\0';
        ParseTree *rt = Parse(G, s, 1);
        ParseTreeLog(rt, content);
    }
  #+END_SRC
  [[file:img/test1.png][test case 1 parse tree]]
